{"version":3,"sources":["pages/platform/index.jsx"],"names":["Platformpel","state","nearSitesBus","mergeData","frame","is_toast","timer","_getNearSites","a","props","mylocation","userId","city","country","latitude","longitude","province","recommendLine","range","code","dataList","data","forEach","item","soleId","lineId","upDown","ranNum","Math","random","flag","_getSelectLineCars","array","Loading","show","lineSites","cache","JSON","parse","localStorage","getItem","operation","_setFlag","recommendList","_setRecommend","selectLineCars","lineSiteCarsParams","selectLineCarsList","remove","_mergeList","_sortView","setState","_changerecommend","_changeFrame","e","_changeFlag","id","_changeSwitchID","_setImgDOM","index","src","home","alt","company","fav","this","setInterval","clearInterval","name","location","className","source","map","lineName","siteName","status","runStauts","siteOrder","list","onClick","fav2","changeFeame","Component","connect","locationCity","dispatch","busReal","type","RECOMMENDLINE","SWITCH"],"mappings":"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","file":"static/js/13.8f600c1d.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport {connect} from 'react-redux'//引入redux容器组件\r\nimport { RECOMMENDLINE } from '@/redux/recommend/variable.js'\r\nimport { _setRecommend , _sortView , _mergeList,_setFlag} from '@/tool/Processing.js'\r\nimport { recommendLine  , selectLineCars} from '@/tool/api/real_bus.js'\r\nimport { SWITCH } from '@/redux/switch_state/variable.js'\r\nimport Loading from '@/tool/loading/Loading.js'\r\nimport Cardchildred from '@/components/card_children/index'\r\nimport Searchbar from '@/components/searchBar/index'\r\nimport Bulletframe from '@/components/Bulletframe/index'\r\nimport home from '@/assets/imgs/home.png'\r\nimport company from '@/assets/imgs/company.png'\r\nimport fav from '@/assets/imgs/fav.png'\r\nimport fav2 from '@/assets/imgs/fav2.png'\r\nimport './index.scss'\r\nclass Platformpel extends Component {\r\n    state={\r\n        nearSitesBus:{},\r\n        mergeData:[],\r\n        frame:false,\r\n        is_toast:true,\r\n        timer:null\r\n    }\r\n    _getNearSites = async () =>{//附近站点信息\r\n        const {userId,city,country,latitude,longitude,province} = this.props.mylocation\r\n        const { code , data:dataList } = await recommendLine({range:1000,userId,city,country,latitude,longitude,province})\r\n        if( code!==200) return\r\n        dataList.forEach(item=>{\r\n            item.soleId=item.lineId+item.upDown\r\n            item.ranNum=Math.random(1)\r\n            item.flag=0\r\n        })\r\n       this._getSelectLineCars(dataList)\r\n    }\r\n    _getSelectLineCars = async (array) =>{\r\n        const { is_toast } = this.state\r\n        if(is_toast) Loading.show() \r\n        let lineSites=array\r\n        const { userId } = this.props.mylocation\r\n        let cache=JSON.parse(localStorage.getItem('collection'))||[]\r\n        let operation=_setFlag(lineSites,cache)\r\n        let recommendList = _setRecommend( operation )\r\n        const { data:selectLineCarsList,code } = await selectLineCars({userId,lineSiteCarsParams:recommendList})\r\n        if( code!==200) return\r\n        if(is_toast) Loading.remove()\r\n        let mergeData = _mergeList(_sortView(selectLineCarsList),_sortView(operation))//合并数据\r\n        this.setState({mergeData})\r\n        this.props._changerecommend(mergeData)\r\n        this.state.is_toast=false\r\n    }\r\n    _changeFrame = (e) =>{\r\n        this.setState({\r\n            frame:e\r\n        })\r\n    }\r\n    _changeFlag = (id) =>{\r\n        const { frame } = this.state\r\n        this.props._changeSwitchID(1)\r\n        this.setState({\r\n            frame:!frame,\r\n            soleId:id\r\n        })\r\n    }\r\n    _setImgDOM = (index) =>{\r\n        if(index===1) return (<img src={home} alt=\"\" />)\r\n        if(index===2) return (<img src={company} alt=\"\" />)\r\n        if(index===3) return (<img src={fav} alt=\"\" />)\r\n    }\r\n    componentDidMount(){\r\n        this._getNearSites()\r\n        this.state.timer=setInterval(()=>{\r\n            this._getNearSites()\r\n        },15000)\r\n    }\r\n    componentWillUnmount(){\r\n        clearInterval(this.state.timer&&this.state.timer)\r\n        this.props._changerecommend([])\r\n    }\r\n    render() {\r\n        const { mergeData ,frame,soleId} =this.state\r\n        const { name } =this.props.location.state\r\n        return (\r\n            <div className=\"platform\">\r\n                <div className=\"platform_top\">{name}</div>\r\n                <Searchbar source={ true }></Searchbar>\r\n                <div className=\"platform_main\">\r\n                    {\r\n                        mergeData.map(item=>{\r\n                            return (\r\n                                <div className=\"main_box\" key={item.ranNum}>\r\n                                    <div className=\"box_left\">\r\n                                        <div className=\"left_top\">\r\n                                            <span className=\"top_span\">公交</span>\r\n                                            <span className=\"spans\">{item.lineName}</span>\r\n                                        </div>\r\n                                        <div className=\"left_fl\">\r\n                                            <span className=\"top_span\">下一站</span>\r\n                                            <span className=\"spans\">{item.siteName}</span>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"box_right\">\r\n                                        <Cardchildred status={item.runStauts} siteOrder={item.siteOrder} list={item.list} lineId={item.lineId}></Cardchildred>\r\n                                        <div className=\"right_line\"></div>\r\n                                        <div className=\"right_img\" onClick={()=>this._changeFlag(item.soleId)}>\r\n                                                  {\r\n                                                      item.flag\r\n                                                      ?this._setImgDOM(item.flag)\r\n                                                      :<img src={fav2} alt=\"\" />\r\n                                                  }\r\n                                              </div>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n                { frame?<Bulletframe soleId={soleId} changeFeame={this._changeFrame}></Bulletframe>:'' }\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps=(state)=>({mylocation:state.locationCity})\r\nconst mapDisPatchToProps=(dispatch)=>({\r\n    _changerecommend:( busReal ) =>{\r\n        dispatch({type:RECOMMENDLINE,data:busReal })\r\n    },\r\n    _changeSwitchID:(id)=>{\r\n        dispatch({type:SWITCH,data:id})\r\n    }\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps,mapDisPatchToProps)(Platformpel)"],"sourceRoot":""}